{{- $userPermissions := .Values.phpfpm.userPermissions }}
{{- include "efs.list" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akeneo.fullname" . }}-php
  labels:
    tier: {{ template "akeneo.fullname" . }}-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "akeneo.fullname" . }}-php
      tier: {{ template "akeneo.fullname" . }}-frontend
  template:
    metadata:
      labels:
        app: {{ template "akeneo.fullname" . }}-php
        tier: {{ template "akeneo.fullname" . }}-frontend
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets | quote }}
      {{- end }}
      volumes:
        {{- (include "efs.list.volumes" .) | indent 8 }}
        {{- if .Values.hostpath.enabled }}
        - name: hostpath
          persistentVolumeClaim:
            claimName: {{ .Values.hostpath.existingClaim | default (printf "%s-hostpath-pvc" (include "akeneo.fullname" .)) }}
        {{- end }}
      {{- if or .Values.efsList.enabled .Values.hostpath.enabled .Values.hostpath.existingClaim }}
      {{- if .Values.phpfpm.volumePermissionEnabled }}
      initContainers:
      - name: volume-permissions
        image: alpine
        command: ["/bin/sh","-c"]
        args:
        - |-
        {{- (include "efs.list.initContainers.args" .) | indent 8 }}
        {{- if or .Values.hostpath.enabled .Values.hostpath.existingClaim }}
          chown -c {{ $userPermissions }}:{{ $userPermissions }} {{ .Values.hostpath.path }} &&
        {{- range $index, $val := .Values.hostpath.containerMountPaths }}
          chown -c {{ $userPermissions }}:{{ $userPermissions }} {{ $val }} &&
        {{- end }}
        {{- end }}
          ls -la /srv/pim
        volumeMounts:
        {{- (include "efs.list.volumeMounts" .) | indent 8 }}
        {{- if or .Values.hostpath.enabled .Values.hostpath.existingClaim }}
        - mountPath: /hostpath
          name: hostpath
        {{- range $index, $val := .Values.hostpath.containerMountPaths }}
        - mountPath: {{ $val }}
          subPath: {{ (trimPrefix "/" $val) }}
          name: hostpath
        {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
      containers:
        - name: php
          image: "{{ .Values.images.php.repo -}} : {{- .Values.images.php.tag }}"
          env:
          - name: COMPOSER_HOME
            value: /home/docker/.composer
          workingDir: /srv/pim
          ports:
          - containerPort: {{ .Values.phpfpm.listenPort }}
          {{- if or (eq .Values.phpfpm.limits.enabled true) (eq .Values.phpfpm.requests.enabled true) }}
          resources:
            {{- if .Values.phpfpm.limits.enabled }}
            limits:
              cpu: {{ .Values.phpfpm.limits.cpu }}
              memory: {{ .Values.phpfpm.limits.memory }}
            {{- end }}
            {{- if .Values.phpfpm.requests.enabled}}
            requests:
              cpu: {{ .Values.phpfpm.requests.cpu }}
              memory: {{ .Values.phpfpm.requests.memory }}
            {{- end }}
          {{- else }}
          resources: {}
          {{- end }}
          volumeMounts:
            {{- (include "efs.list.volumeMounts" .) | indent 12 }}
            {{- if .Values.hostpath.enabled }}
            {{- range $index, $val := .Values.hostpath.containerMountPaths }}
            - mountPath: {{ $val }}
              subPath: {{ (trimPrefix "/" $val) }}
              name: hostpath
            {{- end }}
            {{- end }}
      restartPolicy: Always