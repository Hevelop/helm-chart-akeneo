{{- if .Values.akeneo.redis.enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "akeneo.fullname" . }}-akeneo-config-prod-yml
  labels:
    name: {{ template "akeneo.fullname" . }}-akeneo-config-prod-yml
data:
  config_prod.yml: |
    imports:
        - { resource: config.yml }

    doctrine:
        orm:
            entity_managers:
                default:
                    metadata_cache_driver:
                        cache_provider: pim
                    result_cache_driver:
                        cache_provider: pim
                    query_cache_driver:
                        cache_provider: pim
        dbal:
            driver:   %database_driver%
            host:     %database_host%
            port:     %database_port%
            dbname:   %database_name%
            user:     %database_user%
            password: %database_password%
            charset:  UTF8
        orm:
            auto_generate_proxy_classes: %kernel.debug%
            auto_mapping: true
            # enable metadata caching
            metadata_cache_driver: redis
            # enable query caching
            query_cache_driver: redis

    monolog:
        handlers:
            main:
                type:         fingers_crossed
                action_level: warning
                handler:      nested
            nested:
                type: stream
                path: '%kernel.logs_dir%/%kernel.environment%.log'
                level: info
            console:
                type:  console

    oro_assetic:
        css_debug:      ~
        css_debug_all:  false


    snc_redis:
        session:
            client: session
            prefix: {{ .Values.akeneo.redis.sessionPrefix }}
        doctrine:
            metadata_cache:
                client: cache
                entity_manager: default          # the name of your entity_manager connection
                document_manager: default        # the name of your document_manager connection
            result_cache:
                client: cache
                entity_manager: [default, read]  # you may specify multiple entity_managers
            query_cache:
                client: cache
                entity_manager: default
            second_level_cache:
                client: cache
                entity_manager: default


        clients:
            default:
                type: predis
                alias: default
                dsn: redis://{{- .Values.akeneo.redis.host }}
                logging: %kernel.debug%
            cache:
                type: predis
                alias: cache
                dsn: redis://{{- .Values.akeneo.redis.host }}/1
                options:
                    profile: 2.2
                    connection_timeout: 10
                    read_write_timeout: 30
            session:
                type: predis
                alias: session
                dsn: redis://{{- .Values.akeneo.redis.host }}/2

    framework:
        session:
            handler_id: snc_redis.session.handler
        cache:
            app: cache.adapter.redis
            default_redis_provider: "redis://{{- .Values.akeneo.redis.host }}"
{{- end }}