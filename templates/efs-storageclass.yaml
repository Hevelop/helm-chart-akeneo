{{- if and (.Values.efs.enabled) (not .Values.efs.existingClaim) }}
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: {{ .Values.efs.storageClass.name }}
  labels:
    app: {{ template "akeneo.name" . }}
    chart: {{ template "akeneo.chartname" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
{{- if .Values.efs.storageClass.isDefault }}
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
{{ toYaml .Values.efs.annotations | indent 4 }}
{{- end }}
provisioner: {{ .Values.efs.provisionerName }}
parameters:
{{- if .Values.efs.storageClass.gidAllocate.enabled }}
{{- with .Values.efs.storageClass.gidAllocate }}
  gidAllocate: "true"
  gidMin: "{{ .gidMin }}"
  gidMax: "{{ .gidMax }}"
{{- end }}
{{- else }}
  gidAllocate: "false"
{{- end }}
reclaimPolicy: {{ .Values.efs.storageClass.reclaimPolicy }}
{{- end }}