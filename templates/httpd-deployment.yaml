{{- include "efs.list" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akeneo.fullname" . }}-httpd
  labels:
    tier: {{ template "akeneo.fullname" . }}-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "akeneo.fullname" . }}-httpd
      tier: {{ template "akeneo.fullname" . }}-frontend
  template:
    metadata:
      labels:
        app: {{ template "akeneo.fullname" . }}-httpd
        tier: {{ template "akeneo.fullname" . }}-frontend
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets | quote }}
      {{- end }}
      volumes:
        - name: vhost-conf
          configMap:
            name: {{ template "akeneo.fullname" . }}-vhost-conf
        - name: httpd-conf
          configMap:
            name: {{ template "akeneo.fullname" . }}-httpd-conf
        {{- include "efs.list.volumes" . | indent 8 }}
        {{- if .Values.hostpath.enabled }}
        - name: hostpath
          persistentVolumeClaim:
            claimName: {{ .Values.hostpath.existingClaim | default (printf "%s-hostpath-pvc" (include "akeneo.fullname" .)) }}
        {{- end }}
      containers:
      - name: httpd
        image: "{{ .Values.images.httpd.repo -}} : {{- .Values.images.httpd.tag }}"
        ports:
        - containerPort: 80
        {{- if or (eq .Values.httpd.limits.enabled true) (eq .Values.httpd.requests.enabled true) }}
        resources:
          {{- if .Values.httpd.limits.enabled }}
          limits:
            cpu: {{ .Values.httpd.limits.cpu }}
            memory: {{ .Values.httpd.limits.memory }}
          {{- end }}
          {{- if .Values.httpd.requests.enabled}}
          requests:
            cpu: {{ .Values.httpd.requests.cpu }}
            memory: {{ .Values.httpd.requests.memory }}
          {{- end }}
        {{- else }}
        resources: {}
        {{- end }}
        volumeMounts:
          - name: vhost-conf
            mountPath: /usr/local/apache2/conf/vhost.conf
            subPath: vhost.conf
          - name: httpd-conf
            mountPath: /usr/local/apache2/conf/httpd.conf
            subPath: httpd.conf
          {{- include "efs.list.volumeMounts" . | indent 10 }}
          {{- if .Values.hostpath.enabled }}
          {{- range $index, $val := .Values.hostpath.containerMountPaths }}
          - mountPath: {{ $val }}
            subPath: {{ (trimPrefix "/" $val) }}
            name: hostpath
          {{- end }}
          {{- end }}
      restartPolicy: Always