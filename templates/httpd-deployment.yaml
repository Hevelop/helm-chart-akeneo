apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akeneo.fullname" . }}-httpd
  labels:
    tier: {{ template "akeneo.fullname" . }}-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "akeneo.fullname" . }}-httpd
      tier: {{ template "akeneo.fullname" . }}-frontend
  template:
    metadata:
      labels:
        app: {{ template "akeneo.fullname" . }}-httpd
        tier: {{ template "akeneo.fullname" . }}-frontend
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets | quote }}
      {{- end }}
      volumes:
        - name: vhost-conf
          configMap:
            name: {{ template "akeneo.fullname" . }}-vhost-conf
        - name: httpd-conf
          configMap:
            name: {{ template "akeneo.fullname" . }}-httpd-conf
        {{- if .Values.efs.enabled }}
        - name: efs
          persistentVolumeClaim:
            claimName: {{ .Values.efs.existingClaim | default (printf "%s-efs-pvc" (include "akeneo.fullname" .)) }}
        {{- end }}
      containers:
      - name: httpd
        image: "{{ .Values.images.httpd.repo -}} : {{- .Values.images.httpd.tag }}"
        ports:
        - containerPort: 80
        volumeMounts:
          - name: vhost-conf
            mountPath: /usr/local/apache2/conf/vhost.conf
            subPath: vhost.conf
          - name: httpd-conf
            mountPath: /usr/local/apache2/conf/httpd.conf
            subPath: httpd.conf
          {{- if .Values.efs.enabled }}
          {{- range $index, $val := .Values.efs.containerMountPaths }}
          - mountPath: {{ $val }}
            subPath: {{ (trimPrefix "/" $val) }}
            name: efs
          {{- end }}
          {{- end }}
      restartPolicy: Always